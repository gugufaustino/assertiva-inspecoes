//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Differencial.Domain.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class BancoDados {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal BancoDados() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Differencial.Domain.Resources.BancoDados", typeof(BancoDados).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @nomeTabela VARCHAR(MAX)
        ///DECLARE @existeTrigger INT
        ///
        ///DECLARE @sqlTrigger NVARCHAR(MAX)
        ///
        ///SET @existeTrigger = 0
        ///
        ///SET @sqlTrigger = &apos;&apos;
        ///
        ///DECLARE C CURSOR LOCAL STATIC READ_ONLY FORWARD_ONLY
        ///
        ///FOR SELECT TABLE_NAME AS SCRIPT FROM INFORMATION_SCHEMA.TABLES
        ///WHERE TABLE_TYPE = &apos;BASE TABLE&apos;
        ///AND TABLE_NAME NOT IN (&apos;__MigrationHistory&apos;, &apos;LogTrilhaAuditoria&apos;);
        ///
        ///OPEN C
        ///FETCH NEXT FROM C INTO @nomeTabela
        ///
        ///WHILE @@FETCH_STATUS = 0
        ///BEGIN
        ///	
        ///	select @existeTrigger = COUNT(*) from sys.triggers whe [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DroparTriggersTable {
            get {
                return ResourceManager.GetString("DroparTriggersTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE FUNCTION [dbo].[fnCalcDistancia] 
        ///(
        ///@latIni float, @lonIni float, @latFim float, @lonFim float  
        ///)
        ///RETURNS float
        ///AS
        ///BEGIN
        ///
        ///DECLARE @Result as float, @arcoA as float, @arcoB  float, @arcoC as float, @auxPI as FLOAT;
        ///
        ///SET @auxPi = Pi() / 180;
        ///SET @arcoA = (@lonFim - @lonIni) * @auxPi;
        ///SET @arcoB = (90 - @latFim) * @auxPi;
        ///SET @arcoC = (90 - @latIni) * @auxPi;
        ///SET @Result = Cos(@arcoB) * Cos(@arcoC) + Sin(@arcoB) * Sin(@arcoC) * Cos(@arcoA);
        ///SET @Result = (40030 * ((180 / Pi()) * Acos(@Re [rest of string was truncated]&quot;;.
        /// </summary>
        public static string fnCalcDistancia {
            get {
                return ResourceManager.GetString("fnCalcDistancia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE FUNCTION [dbo].[FunctionTable]
        ///(
        ///	@param1 float,
        ///	@param2 float,
        ///	@param3 int 
        ///)
        ///RETURNS @returntable TABLE
        ///(
        ///	Id int,
        ///	NomeOperador varchar(300),
        ///	DistanciaRaio float null,
        ///	DistanciaRota float null
        ///) 
        ///AS 
        ///BEGIN
        ///
        ///DECLARE @Top AS INT
        ///
        ////*
        ///DECLARE @param1 AS FLOAT, @param2 AS FLOAT
        ///SET @param1 = -30.008597 
        ///SET @param2 = -51.191220 
        ///*/
        ///
        ///
        ///	INSERT @returntable
        ///
        ///		SELECT TOP 10
        ///				Operador.Id,
        ///				Operador.NomeOperador,
        ///				/* DISTANCIA = CASE WHEN ENDERECO.Latitude is NULL  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string fnVistoriadorDistancia {
            get {
                return ResourceManager.GetString("fnVistoriadorDistancia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [dbo].[fnCalcDistancia].
        /// </summary>
        public static string NomefnCalcDistancia {
            get {
                return ResourceManager.GetString("NomefnCalcDistancia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [dbo].[FunctionTable].
        /// </summary>
        public static string NomefnVistoriadorDistancia {
            get {
                return ResourceManager.GetString("NomefnVistoriadorDistancia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [dbo].[sp_setusercontext].
        /// </summary>
        public static string NomeProcedureSetUserContext {
            get {
                return ResourceManager.GetString("NomeProcedureSetUserContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE PROCEDURE [dbo].[sp_setusercontext]
        ///    @cod_usuario VARCHAR(10)
        ///AS
        ///BEGIN
        ///    SET NOCOUNT ON;
        ///
        ///    DECLARE @context VARBINARY(10)
        ///    SET @context = CONVERT(BINARY(10), @cod_usuario)
        ///
        ///    SET CONTEXT_INFO @context
        ///END.
        /// </summary>
        public static string sp_setusercontext {
            get {
                return ResourceManager.GetString("sp_setusercontext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @nomeTabela VARCHAR(MAX)
        ///DECLARE @existeTrigger INT
        ///
        ///DECLARE @sqlTrigger NVARCHAR(MAX)
        ///
        ///SET @existeTrigger = 0
        ///
        ///SET @sqlTrigger = &apos;&apos;
        ///
        ///DECLARE C CURSOR LOCAL STATIC READ_ONLY FORWARD_ONLY
        ///
        ///FOR SELECT TABLE_NAME AS SCRIPT FROM INFORMATION_SCHEMA.TABLES
        ///WHERE TABLE_TYPE = &apos;BASE TABLE&apos;
        ///AND TABLE_NAME NOT IN (&apos;__MigrationHistory&apos;, &apos;LogAuditoria&apos;, &apos;sysdiagrams&apos;);
        ///
        ///OPEN C
        ///FETCH NEXT FROM C INTO @nomeTabela
        ///
        ///WHILE @@FETCH_STATUS = 0
        ///BEGIN
        ///	
        ///	select @existeTrigger = COUNT(*) from sys.tri [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VerificacaoCriacaoTriggerAuditoria {
            get {
                return ResourceManager.GetString("VerificacaoCriacaoTriggerAuditoria", resourceCulture);
            }
        }
    }
}
