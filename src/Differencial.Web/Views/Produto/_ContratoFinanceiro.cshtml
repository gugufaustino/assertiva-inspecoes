@model Differencial.Domain.Entities.Produto
@using System.Linq 
 
@{ 
    @Html.HiddenFor(m => m.Contrato.Id)
    Contrato contrato = (Model != null && Model.Contrato != null) ? Model.Contrato : new Contrato();

    if (!contrato.ContratoLancamento.Any(i => i.TipoParametroQuantitativoVariavel == TipoContratoParametroEnum.Comum))
    {
        contrato.ContratoLancamento.Add(new ContratoLancamento
        {   IdContrato = contrato.Id,
            TipoParametroQuantitativoVariavel = TipoContratoParametroEnum.Comum,
            TipoContratoLancamento = TipoContratoLancamentoEnum.Honorario,
            ContratoLancamentoValor = new List<ContratoLancamentoValor> { new ContratoLancamentoValor { TipoQuantitativoVariacao = TipoQuantitativoVariacaoEnum.UnicoNaoVariavel } }
        });
    }


    if (!contrato.ContratoLancamento.Any(i => i.TipoParametroQuantitativoVariavel == TipoContratoParametroEnum.RelatorioMelhoria))
    {
        contrato.ContratoLancamento.Add(new ContratoLancamento
        {
            IdContrato = contrato.Id,
            TipoParametroQuantitativoVariavel = TipoContratoParametroEnum.RelatorioMelhoria,
            TipoContratoLancamento = TipoContratoLancamentoEnum.Honorario,
            ContratoLancamentoValor = new List<ContratoLancamentoValor> { new ContratoLancamentoValor { TipoQuantitativoVariacao = TipoQuantitativoVariacaoEnum.UnicoNaoVariavel } }
        });
    }

    if (!contrato.ContratoLancamento.Any(i => i.TipoParametroQuantitativoVariavel == TipoContratoParametroEnum.ValorRisco))
    {
        contrato.ContratoLancamento.Add(new ContratoLancamento
        {
            IdContrato = contrato.Id,
            TipoParametroQuantitativoVariavel = TipoContratoParametroEnum.ValorRisco,
            TipoContratoLancamento = TipoContratoLancamentoEnum.Honorario
        });
    }

    if (!contrato.ContratoLancamento.Any(i => i.TipoParametroQuantitativoVariavel == TipoContratoParametroEnum.AreaConstruida))
    {
        contrato.ContratoLancamento.Add(new ContratoLancamento
        {
            IdContrato = contrato.Id,
            TipoParametroQuantitativoVariavel = TipoContratoParametroEnum.AreaConstruida,
            TipoContratoLancamento = TipoContratoLancamentoEnum.Honorario
        });
    }

    if (!contrato.ContratoLancamento.Any(i => i.TipoParametroQuantitativoVariavel == TipoContratoParametroEnum.BlocoConstruido))
    {
        contrato.ContratoLancamento.Add(new ContratoLancamento
        {
            IdContrato = contrato.Id,
            TipoParametroQuantitativoVariavel = TipoContratoParametroEnum.BlocoConstruido,
            TipoContratoLancamento = TipoContratoLancamentoEnum.Honorario
        });
    }

    if (!contrato.ContratoLancamento.Any(i => i.TipoParametroQuantitativoVariavel == TipoContratoParametroEnum.CasaConstruida))
    {
        contrato.ContratoLancamento.Add(new ContratoLancamento
        {
            IdContrato = contrato.Id,
            TipoParametroQuantitativoVariavel = TipoContratoParametroEnum.CasaConstruida,
            TipoContratoLancamento = TipoContratoLancamentoEnum.Honorario
        });
    }

    if (!contrato.ContratoLancamento.Any(i => i.TipoParametroQuantitativoVariavel == TipoContratoParametroEnum.Equipamento))
    {
        contrato.ContratoLancamento.Add(new ContratoLancamento
        {
            IdContrato = contrato.Id,
            TipoParametroQuantitativoVariavel = TipoContratoParametroEnum.Equipamento,
            TipoContratoLancamento = TipoContratoLancamentoEnum.Honorario
        });
    }
    if (!contrato.ContratoLancamento.Any(i => i.TipoParametroQuantitativoVariavel == TipoContratoParametroEnum.Estado))
    {
        contrato.ContratoLancamento.Add(new ContratoLancamento
        {
            IdContrato = contrato.Id,
            TipoParametroQuantitativoVariavel = TipoContratoParametroEnum.Estado,
            TipoContratoLancamento = TipoContratoLancamentoEnum.Honorario
        });
    }



    var ctLanc = contrato.ContratoLancamento;
    var item = ctLanc.First(i=> i.TipoParametroQuantitativoVariavel == TipoContratoParametroEnum.Comum);
    ViewData["index"] = 0;
    @await Html.PartialAsync("_HonorarioComum", item, ViewData)

    item = ctLanc.First(i => i.TipoParametroQuantitativoVariavel == TipoContratoParametroEnum.RelatorioMelhoria);
    ViewData["index"] = 1;
    @await Html.PartialAsync("_HonorarioComum", item, ViewData)


    @Html.Raw("<div class='row'>")
    item = ctLanc.First(i => i.TipoParametroQuantitativoVariavel == TipoContratoParametroEnum.ValorRisco);
    ViewData["index"] = 2;
    @await Html.PartialAsync("_TabelaIntervaloEditavel", item, ViewData)

    item = ctLanc.First(i => i.TipoParametroQuantitativoVariavel == TipoContratoParametroEnum.BlocoConstruido);
    ViewData["index"] = 3;
    @await Html.PartialAsync("_TabelaIntervaloEditavel", item, ViewData)

    item = ctLanc.First(i => i.TipoParametroQuantitativoVariavel == TipoContratoParametroEnum.CasaConstruida);
    ViewData["index"] = 4;
    @await Html.PartialAsync("_TabelaIntervaloEditavel", item, ViewData)

    item = ctLanc.First(i => i.TipoParametroQuantitativoVariavel == TipoContratoParametroEnum.AreaConstruida);
    ViewData["index"] = 5;
    @await Html.PartialAsync("_TabelaIntervaloEditavel", item, ViewData)

    item = ctLanc.First(i => i.TipoParametroQuantitativoVariavel == TipoContratoParametroEnum.Equipamento);
    ViewData["index"] = 6;
    @await Html.PartialAsync("_TabelaIntervaloEditavel", item, ViewData)

    item = ctLanc.First(i => i.TipoParametroQuantitativoVariavel == TipoContratoParametroEnum.Estado);
    ViewData["index"] = 7;
    @await Html.PartialAsync("_TabelaEstado", item, ViewData)

    @Html.Raw("</div>")
    

}
 







