@model Solicitacao
@using System.Linq
@{
    Layout = null;
    List<TipoSituacaoProcessoEnum> ProximoMovimento = HtmlWorkFlowHelper.ProximoMovimento(ViewData.Model, WFTipoAcao.Devolver);
    List<TipoMotivoEnum> tipoMotivo = HtmlWorkFlowHelper.MotivoAcao(ProximoMovimento.First());

}
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">&times;</button>
    <h3>Devolver</h3>
</div>

@using (Html.BeginForm("Devolver", "Solicitacao", new { Id = Html.ValueFor(m => m.Id) }, FormMethod.Post ))
{
<div class="modal-body">
    <div class="row">
        <div class="form-group col-md-2">
            @Html.FwShortLabelFor(m => m.Id)
            @Html.FwTextBoxFor(m => m.Id, true)
        </div>
        <div class="form-group col-md-2">
            @Html.FwLabelFor(m => m.CodSeguradora)
            @Html.FwTextBoxFor(m => m.CodSeguradora, true)
        </div>
        <div class="form-group col-md-8">
            @Html.FwLabelFor(m => m.Produto.NomeProduto)
            @Html.FwTextBoxFor(m => m.Produto.NomeProduto, true)
        </div>
        <div class="form-group col-md-5">
            @{
                var nomeAcao = WFTipoAcao.Devolver.ToString();
                var nomeMovimento = ProximoMovimento.FirstOrDefault().FwDisplaySituacaoAcaoEnum();
            }
            @Html.Label("Ação")
            @Html.TextBox("txtAcaoMovimento", nomeMovimento, new { @class = "form-control", disabled = "disabled" })
        </div>
        <div class="form-group col-md-7">

            @if (ProximoMovimento.FirstOrDefault() == TipoSituacaoProcessoEnum.DevolvidoParaGerencia)
            {
                @Html.Label("Operador Destino")
                @Html.TextBox("txtOperadorDestino", Model.MovimentacaoProcesso.LastOrDefault(w => w.TipoSituacaoProcesso == TipoSituacaoProcessoEnum.EnviadoParaVistoria).OperadorOrigem.NomeOperador, new { @class = "form-control", disabled = "disabled" })
            }
            else if (ProximoMovimento.FirstOrDefault() == TipoSituacaoProcessoEnum.DevolvidoParaVistoriador)
            {
                @Html.Label("Operador Destino")
                @Html.TextBox("txtOperadorDestino", Model.MovimentacaoProcesso.LastOrDefault(w => w.TipoSituacaoProcesso == TipoSituacaoProcessoEnum.EnviadoParaAnalise).OperadorOrigem.NomeOperador, new { @class = "form-control", disabled = "disabled" })

            }
        </div>
        <div class="form-group col-md-12 ">
            @Html.Label("Motivo Devolução")
            @{
                var items = new List<SelectListItem>();

                foreach (var e in tipoMotivo.Cast<TipoMotivoEnum>())
                {
                    items.Add(new SelectListItem
                    {
                        Text = e.FwDisplayEnum().ToString(),
                        Value = e.ToString()
                    });
                }

            }
            @Html.DropDownList("tipoMotivo", items, new { @class = "form-control" })
        </div>
        <div class="form-group col-md-12 ">
            @Html.Label("Mensagem")
            @Html.TextArea("txtMensagemMovimento", new { @class = "form-control", rows = "5" })
        </div>

    </div>
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-white" data-dismiss="modal">Cancelar</button>
    <button type="submit" class="btn btn-primary">Enviar</button>
</div>
<script>

</script>
}