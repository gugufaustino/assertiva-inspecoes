@model Solicitacao
@{
    var lstAtivDisponiveis = (List<TipoAtividadeEnum>)ViewBag.lstAtivDisponiveis;
}
@using (Html.BarraAtividade())
{ 
    if (lstAtivDisponiveis.Contains(TipoAtividadeEnum.DefinirVistoriador))
    {
        <div class="btn-group">
            <button type="button" class="btn btn-success btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="fa fa-pencil "></span>
                Definir &nbsp;
                <span class="caret"></span>
                <span class="sr-only"></span>
            </button>
            <ul class="dropdown-menu">
                <li>
                    <a fw-click="modal" fw-modal="modal-lg" data-href="@Url.Action("VistoriadorSugerido", new { id = Html.ValueFor(m => m.Id).ToString() })">
                        <span class="fa fa-users"></span> Sugerido
                    </a>
                </li>
                <li>
                    <a fw-click="modal" fw-modal="modal-lg" data-href="@Url.Action("VistoriadorPesquisar", new { id = Html.ValueFor(m => m.Id).ToString() })">
                        <span class="fa fa-user"></span>  Manual
                    </a>
                </li>
            </ul>
        </div> 
    }

}
<div class="col-md-12">
    <div class="row">
        <div class="col-md-8">
            <div class="row">
                <div class="form-group col-md-12">
                    @Html.FwLabelFor(m => m.IdVistoriador)
                    @Html.FwTextBoxFor(m => m.Vistoriador.Operador.NomeOperador, true)
                </div>
                <div class="form-group col-md-12">
                    @Html.FwLabelFor(m => m.TxtJustificativaVistoriadorDefinido)
                    @Html.FwTextAreaFor(m => m.TxtJustificativaVistoriadorDefinido, true)
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="row">
                <div class="form-group col-md-12">
                    @Html.FwLabelFor(m => m.VistoriadorCidadeBase)
                    @Html.FwTextBoxFor(m => m.VistoriadorCidadeBase, true)
                </div>
                <div class="form-group col-md-12">
                    @Html.FwShortLabelFor(m => m.VlrPagamentoVistoria)
                    @Html.FwCurrencyFor(m => m.VlrPagamentoVistoria, true)
                </div>
                <div class="form-group col-md-12">
                    @Html.FwLabelFor(m => m.VlrQuilometroRodado)
                    @Html.FwCurrencyFor(m => m.VlrQuilometroRodado, true)
                </div>
            </div>
        </div>
    </div>
</div>
<div class="hr-line-dashed col-md-12"></div>
<div class="col-md-4 b-r">
    <div class="row">
        <div class="form-group col-md-12">
            @Html.FwLabelFor(m => m.TipoRotaVistoriaPrevista)
            <div class="no-padding radioDuploVertical">
                @{ 
                    var strLinkRota = @"<a href='{0}' target='_blank'><i class='fa fa-map-marker' style='font-size: 16px;'></i>  <small class='text-nowrap'>{1}</small></a>&nbsp;";
                    var strLinkVolta = string.Empty;
                }
                <div class="radio">
                    <label>
                        @Html.RadioButton("rbtTipoRotaVistoriaPrevista_gestao", TipoRotaVistoriaEnum.CidadeBase, Model != null ? Model.TipoRotaVistoriaPrevista == TipoRotaVistoriaEnum.CidadeBase : false, new { @disabled = "disabled" })
                        @TipoRotaVistoriaEnum.CidadeBase.FwDisplayEnum()
                        @if (Html.ValueFor(m => m.TipoRotaVistoriaPrevista).ToString() == TipoRotaVistoriaEnum.CidadeBase.ToString() && !String.IsNullOrEmpty(ViewBag.UrlMapaRotaAnterior))
                        {
                            @Html.Raw(strLinkRota.Formata((string)ViewBag.UrlMapaRotaAnterior, "Ver"));
                            if (!String.IsNullOrEmpty(ViewBag.UrlMapaRotaDeVolta))
                            {
                                @Html.Raw(strLinkRota.Formata((string)ViewBag.UrlMapaRotaDeVolta, "Retorno"));
                            }
                        }
                    </label>
                </div>
                <div class="radio">
                    <label>
                        @Html.RadioButton("rbtTipoRotaVistoriaPrevista_gestao", TipoRotaVistoriaEnum.EntreVistoria, Model != null ? Model.TipoRotaVistoriaPrevista == TipoRotaVistoriaEnum.EntreVistoria : false, new { @disabled = "disabled" })
                        @TipoRotaVistoriaEnum.EntreVistoria.FwDisplayEnum()
                        @if (Html.ValueFor(m => m.TipoRotaVistoriaPrevista).ToString() == TipoRotaVistoriaEnum.EntreVistoria.ToString() && !String.IsNullOrEmpty(ViewBag.UrlMapaRotaAnterior))
                        {
                            @Html.Raw(strLinkRota.Formata((string)ViewBag.UrlMapaRotaAnterior, "Ver"));
                            if (!String.IsNullOrEmpty(ViewBag.UrlMapaRotaDeVolta))
                            {
                                @Html.Raw(strLinkRota.Formata((string)ViewBag.UrlMapaRotaDeVolta, "Retorno"));
                            }
                        }
                    </label>
                </div>
            </div>
        </div>
        <div class="form-group col-md-12">
            @Html.FwShortLabelFor(m => m.DeslocamentoPrevisto)
            @Html.FwCurrencyFor(m => m.DeslocamentoPrevisto, true)
        </div>
        <div class="form-group col-md-12">
            @Html.FwShortLabelFor(m => m.CustoDeslocamentoPrevisto)
            @Html.FwCurrencyFor(m => m.CustoDeslocamentoPrevisto, true)
        </div>
        <div class="form-group col-md-12 ">
            @Html.FwShortLabelFor(m => m.CustoTotalPrevisto)
            @Html.FwCurrencyFor(m => m.CustoTotalPrevisto, true)
        </div>
    </div>
</div>

<div class="col-md-4 b-r">
    <div class="row">
        <div class="form-group col-md-12">
            @Html.FwLabelFor(m => m.TipoRotaVistoriaRealizada)
            <div class="no-padding radioDuploVertical">
                <div class="radio">
                    <label>
                        @Html.RadioButton("rbtTipoRotaVistoriaRealizada_gestao", TipoRotaVistoriaEnum.CidadeBase, Model != null ? Model.TipoRotaVistoriaRealizada == TipoRotaVistoriaEnum.CidadeBase : false, new { @disabled = "disabled" })
                        @TipoRotaVistoriaEnum.CidadeBase.FwDisplayEnum()
                    </label>
                </div>
                <div class="radio">
                    <label>
                        @Html.RadioButton("rbtTipoRotaVistoriaRealizada_gestao", TipoRotaVistoriaEnum.EntreVistoria, Model != null ? Model.TipoRotaVistoriaRealizada == TipoRotaVistoriaEnum.EntreVistoria : false, new { @disabled = "disabled" })
                        @TipoRotaVistoriaEnum.EntreVistoria.FwDisplayEnum()
                    </label>
                </div>
            </div>
        </div>
        <div class="form-group col-md-12 ">
            @Html.FwShortLabelFor(m => m.DeslocamentoRealizado)
            @Html.FwCurrencyFor(m => m.DeslocamentoRealizado, true)
        </div>
        <div class="form-group col-md-12">
            @Html.FwShortLabelFor(m => m.CustoDeslocamentoRealizado)
            @Html.FwCurrencyFor(m => m.CustoDeslocamentoRealizado, true)
        </div>
        <div class="form-group col-md-12 ">
            @Html.FwShortLabelFor(m => m.CustoTotalRealizado)
            @Html.FwCurrencyFor(m => m.CustoTotalRealizado, true)
        </div>
    </div>
</div>

<div class="col-md-4">
    <div class="row">
        <div class="form-group col-md-12" style="height:62px">
            <label class="checkbox-inline" style="font-weight:700; cursor:default">
                @Html.CheckBoxFor(m => m.IndCustoVistoriaAcordado, new { @disabled = "disabled" })
                Custos Pré-Acordado
            </label>
            @*<div class="input-group"></div>*@
        </div>
        <div class="form-group col-md-12">
            @Html.FwShortLabelFor(m => m.VlrPagamentoVistoriaAcordado)

            @if (lstAtivDisponiveis.Contains(TipoAtividadeEnum.DefinirVistoriador))
            {
                <div class="input-group">
                    @Html.FwCurrencyFor(m => m.VlrPagamentoVistoriaAcordado, true)
                    <span class="input-group-btn">
                        <button class="btn btn-primary" type="button"
                                fw-click="prompt" data-href="@Url.Action("EditarVlrPagamentoVistoriaAcordado", new { id = Html.ValueFor(m => m.Id).ToString() })">
                            <span class="fa fa-pencil"></span>
                        </button>
                    </span>
                </div>
            }
            else
            {
                @Html.FwCurrencyFor(m => m.VlrPagamentoVistoriaAcordado, true)
            }

        </div>
        <div class="form-group col-md-12">
            @Html.FwShortLabelFor(m => m.CustoDeslocamentoAcordado)
            @if (lstAtivDisponiveis.Contains(TipoAtividadeEnum.DefinirVistoriador))
            {
                <div class="input-group">
                    @Html.FwCurrencyFor(m => m.CustoDeslocamentoAcordado, true)
                    <span class="input-group-btn">
                        <button class="btn btn-primary" type="button"
                                fw-click="prompt" data-href="@Url.Action("EditarCustoDeslocamentoAcordado", new { id = Html.ValueFor(m => m.Id).ToString() })">
                            <span class="fa fa-pencil"></span>
                        </button>
                    </span>
                </div>
            }
            else
            {
                @Html.FwCurrencyFor(m => m.CustoDeslocamentoAcordado, true)
            }
        </div>

        <div class="form-group col-md-12">
            @Html.FwShortLabelFor(m => m.CustoTotalAcordado)
            @Html.FwCurrencyFor(m => m.CustoTotalAcordado, true)
        </div>
    </div>
</div>
<style>
    #tabVistoriador .float-e-margins .btn {
        margin-bottom: 0;
    }
</style>