// <auto-generated />
using System;
using Differencial.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Differencial.Repository.Migrations
{
    [DbContext(typeof(DifferencialContext))]
    [Migration("20220915140544_init_function_sp")]
    partial class init_function_sp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Differencial.Domain.Entities.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<DateTime?>("DthAgendamento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DthAgendamento");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<int>("IdSolicitacao")
                        .HasColumnType("int")
                        .HasColumnName("IdSolicitacao");

                    b.Property<int>("IdVistoriador")
                        .HasColumnType("int")
                        .HasColumnName("IdVistoriador");

                    b.Property<bool>("IndCancelado")
                        .HasColumnType("bit")
                        .HasColumnName("IndCancelado");

                    b.Property<string>("MotivoCancelamentoReagendamento")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("MotivoCancelamentoReagendamento");

                    b.Property<int>("TipoAgendamento")
                        .HasColumnType("int")
                        .HasColumnName("TipoAgendamento");

                    b.HasKey("Id");

                    b.HasIndex("IdSolicitacao");

                    b.HasIndex("IdVistoriador");

                    b.ToTable("Agendamento");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Analista", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<bool>("IndAtivo")
                        .HasColumnType("bit")
                        .HasColumnName("IndAtivo");

                    b.HasKey("Id");

                    b.ToTable("Analista");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.AnalistaProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<bool>("IndAtivo")
                        .HasColumnType("bit")
                        .HasColumnName("IndAtivo");

                    b.Property<int?>("QtdPontuacao")
                        .HasColumnType("int")
                        .HasColumnName("QtdPontuacao");

                    b.HasKey("Id");

                    b.ToTable("AnalistaProduto");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.ArquivoAnexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArquivoAnexoPosicao")
                        .HasColumnType("int")
                        .HasColumnName("ArquivoAnexoPosicao");

                    b.Property<DateTime>("ArquivoDataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("ArquivoDataModificacao");

                    b.Property<string>("ArquivoExtencao")
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("ArquivoExtencao");

                    b.Property<string>("ArquivoNome")
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("ArquivoNome");

                    b.Property<long>("ArquivoTamanhoBytes")
                        .HasColumnType("bigint")
                        .HasColumnName("ArquivoTamanho");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<string>("Descricao")
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Descricao");

                    b.Property<Guid>("GuidArquivo")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GuidArquivo");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<int>("IdSolicitacao")
                        .HasColumnType("int")
                        .HasColumnName("IdSolicitacao");

                    b.Property<bool>("IndExcluida")
                        .HasColumnType("bit")
                        .HasColumnName("IndExcluida");

                    b.Property<int>("TipoArquivoAnexo")
                        .HasColumnType("int")
                        .HasColumnName("TipoArquivoAnexo");

                    b.HasKey("Id");

                    b.HasIndex("IdSolicitacao");

                    b.ToTable("Foto");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.AtividadeProcesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<DateTime?>("DthAssinada")
                        .HasColumnType("datetime2")
                        .HasColumnName("DthAssinada");

                    b.Property<DateTime?>("DthConcluida")
                        .HasColumnType("datetime2")
                        .HasColumnName("DthConcluida");

                    b.Property<DateTime?>("DthDelegada")
                        .HasColumnType("datetime2")
                        .HasColumnName("DthDelegada");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int?>("IdOperadorConcluida")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorConcluida");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<int>("IdSolicitacao")
                        .HasColumnType("int")
                        .HasColumnName("IdSolicitacao");

                    b.Property<bool?>("IndRetrabalho")
                        .HasColumnType("bit")
                        .HasColumnName("IndRetrabalho");

                    b.Property<string>("NomeAtividadeProcesso")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NomeAtividadeProcesso");

                    b.Property<int>("TipoAtividade")
                        .HasColumnType("int")
                        .HasColumnName("TipoAtividade");

                    b.Property<int>("TipoSituacaoAtividade")
                        .HasColumnType("int")
                        .HasColumnName("TipoSituacaoAtividade");

                    b.HasKey("Id");

                    b.HasIndex("IdOperadorConcluida");

                    b.HasIndex("IdSolicitacao");

                    b.ToTable("AtividadeProcesso");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AtividadeNome")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("AtividadeNome");

                    b.Property<string>("ContatoAgendamento")
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("ContatoAgendamento");

                    b.Property<string>("ContatoNome")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("ContatoNome");

                    b.Property<string>("ContatoOutro")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("ContatoOutro");

                    b.Property<string>("ContatoTelefone")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ContatoTelefone");

                    b.Property<string>("CpfCnpj")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("CpfCnpj");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<string>("NomeRazaoSocial")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NomeRazaoSocial");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.ClienteEndereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("IdCliente");

                    b.Property<int>("IdEndereco")
                        .HasColumnType("int")
                        .HasColumnName("IdEndereco");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEndereco");

                    b.ToTable("ClienteEndereco");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Cobertura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<int?>("IdSolicitacao")
                        .HasColumnType("int")
                        .HasColumnName("IdSolicitacao");

                    b.Property<string>("NomeCobertura")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NomeCobertura");

                    b.Property<decimal?>("VlrCobertura")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VlrCobertura");

                    b.HasKey("Id");

                    b.HasIndex("IdSolicitacao");

                    b.ToTable("Cobertura");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Comunicacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Assunto")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Assunto");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<int>("IdSolicitacao")
                        .HasColumnType("int")
                        .HasColumnName("IdSolicitacao");

                    b.Property<int?>("IdTipoAssunto")
                        .HasColumnType("int")
                        .HasColumnName("IdTipoAssunto");

                    b.Property<string>("TextoComunicacao")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("TextoComunicacao");

                    b.Property<int>("TipoComunicacao")
                        .HasColumnType("int")
                        .HasColumnName("TipoComunicacao");

                    b.HasKey("Id");

                    b.HasIndex("IdOperadorCadastro");

                    b.HasIndex("IdSolicitacao");

                    b.ToTable("Comunicacao");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.HasKey("Id");

                    b.ToTable("Contrato");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.ContratoLancamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int>("IdContrato")
                        .HasColumnType("int")
                        .HasColumnName("IdContrato");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<int>("TipoContratoLancamento")
                        .HasColumnType("int")
                        .HasColumnName("TipoContratoLancamento");

                    b.Property<int>("TipoParametroQuantitativoVariavel")
                        .HasColumnType("int")
                        .HasColumnName("TipoParametroQuantitativoVariavel");

                    b.HasKey("Id");

                    b.HasIndex("IdContrato");

                    b.ToTable("ContratoLancamento");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.ContratoLancamentoValor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int>("IdContratoLancamento")
                        .HasColumnType("int")
                        .HasColumnName("IdContratoLancamento");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<bool>("IndPreAcordo")
                        .HasColumnType("bit")
                        .HasColumnName("IndPreAcordo");

                    b.Property<decimal?>("QuantitativoA")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("QuantitativoA");

                    b.Property<decimal?>("QuantitativoB")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("QuantitativoB");

                    b.Property<string>("SiglaUf")
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("SiglaUf");

                    b.Property<int>("TipoQuantitativoVariacao")
                        .HasColumnType("int")
                        .HasColumnName("TipoQuantitativoVariacao");

                    b.Property<decimal?>("ValorLancamento")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ValorLancamento");

                    b.Property<decimal?>("ValorLancamentoQuantitativo")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ValorLancamentoQuantitativo");

                    b.HasKey("Id");

                    b.HasIndex("IdContratoLancamento");

                    b.ToTable("ContratoLancamentoValor");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("Bairro");

                    b.Property<string>("Cep")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("Cep");

                    b.Property<string>("Complemento")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("Complemento");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("Latitude");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Logradouro");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("Longitude");

                    b.Property<string>("NomeMunicipio")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("NomeMunicipio");

                    b.Property<int?>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("Numero");

                    b.Property<string>("SiglaUf")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("SiglaUf");

                    b.HasKey("Id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Filial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<int>("IdSeguradora")
                        .HasColumnType("int")
                        .HasColumnName("IdSeguradora");

                    b.Property<string>("NomeFilial")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NomeFilial");

                    b.HasKey("Id");

                    b.HasIndex("IdSeguradora");

                    b.ToTable("Filial");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.LancamentoFinanceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<string>("DescricaoLancamentoFinanceiro")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("DescricaoLancamentoFinanceiro");

                    b.Property<int>("IdLancamentoFinanceiroTotal")
                        .HasColumnType("int")
                        .HasColumnName("IdLancamentoFinanceiroTotal");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<int>("IdSolicitacao")
                        .HasColumnType("int")
                        .HasColumnName("IdSolicitacao");

                    b.Property<int>("TipoLancamentoFinanceiro")
                        .HasColumnType("int")
                        .HasColumnName("TipoLancamentoFinanceiro");

                    b.Property<decimal>("ValorLancamentoFinanceiro")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ValorLancamentoFinanceiro");

                    b.HasKey("Id");

                    b.HasIndex("IdLancamentoFinanceiroTotal");

                    b.HasIndex("IdOperadorCadastro");

                    b.HasIndex("IdSolicitacao");

                    b.ToTable("LancamentoFinanceiro");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.LancamentoFinanceiroTotal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<DateTime>("DthLancamentoPagamento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DthLancamentoPagamento");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<int>("IdSolicitacao")
                        .HasColumnType("int")
                        .HasColumnName("IdSolicitacao");

                    b.Property<int>("TipoLancamentoFinanceiro")
                        .HasColumnType("int")
                        .HasColumnName("TipoLancamentoFinanceiro");

                    b.Property<decimal>("ValorLancamentoFinanceiroTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ValorLancamentoFinanceiroTotal");

                    b.HasKey("Id");

                    b.HasIndex("IdSolicitacao");

                    b.ToTable("LancamentoFinanceiroTotal");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Laudo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<int>("IdSolicitacao")
                        .HasColumnType("int")
                        .HasColumnName("IdSolicitacao");

                    b.HasKey("Id");

                    b.ToTable("Laudo");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.LaudoFoto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int?>("IdLaudo")
                        .HasColumnType("int")
                        .HasColumnName("IdLaudo");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<bool>("IndQuadroFoto")
                        .HasColumnType("bit")
                        .HasColumnName("IndQuadroFoto");

                    b.Property<int>("QuadroFotosPosicao")
                        .HasColumnType("int")
                        .HasColumnName("QuadroFotosPosicao");

                    b.HasKey("Id");

                    b.HasIndex("IdLaudo");

                    b.ToTable("LaudoFoto");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.LogAuditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acao")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Acao");

                    b.Property<DateTime>("DataAcao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataAcao");

                    b.Property<int>("IdTabela")
                        .HasColumnType("int")
                        .HasColumnName("IdTabela");

                    b.Property<string>("Tabela")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("Tabela");

                    b.Property<int>("UsuarioAplicacao")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioAplicacao");

                    b.Property<string>("UsuarioBanco")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("UsuarioBanco");

                    b.Property<string>("XMLDadosAnterior")
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("XMLDadosAnterior");

                    b.Property<string>("XMLDadosPosterior")
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("XMLDadosPosterior");

                    b.HasKey("Id");

                    b.HasIndex("Tabela")
                        .HasDatabaseName("IX_Tabela");

                    b.HasIndex("UsuarioAplicacao");

                    b.ToTable("LogAuditoria");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.MovimentacaoProcesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<DateTime?>("DthApropriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DthApropriacao");

                    b.Property<DateTime?>("DthConclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DthConclusao");

                    b.Property<DateTime>("DthMovimentacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DthMovimentacao");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int?>("IdOperadorDestino")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorDestino");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<int>("IdOperadorOrigem")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorOrigem");

                    b.Property<int>("IdSolicitacao")
                        .HasColumnType("int")
                        .HasColumnName("IdSolicitacao");

                    b.Property<string>("TextoMovimentacao")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("TextoMovimentacao");

                    b.Property<int>("TipoSituacaoMovimento")
                        .HasColumnType("int")
                        .HasColumnName("TipoSituacaoMovimento");

                    b.Property<int>("TipoSituacaoProcesso")
                        .HasColumnType("int")
                        .HasColumnName("TipoSituacaoProcesso");

                    b.HasKey("Id");

                    b.HasIndex("IdOperadorDestino");

                    b.HasIndex("IdOperadorOrigem");

                    b.HasIndex("IdSolicitacao");

                    b.ToTable("MovimentacaoProcesso");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Notificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Descricao");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<int>("IdSolicitacao")
                        .HasColumnType("int")
                        .HasColumnName("IdSolicitacao");

                    b.HasKey("Id");

                    b.ToTable("Notificacao");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.NotificacaoOperador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int>("IdNotificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdNotificacao");

                    b.Property<int>("IdOperador")
                        .HasColumnType("int")
                        .HasColumnName("IdOperador");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<bool>("IndLido")
                        .HasColumnType("bit")
                        .HasColumnName("IndLido");

                    b.HasKey("Id");

                    b.HasIndex("IdNotificacao");

                    b.ToTable("NotificacaoOperador");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Operador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Cpf");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataNascimento");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Email");

                    b.Property<int?>("IdEndereco")
                        .HasColumnType("int")
                        .HasColumnName("IdEndereco");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<bool>("IndAcessoSistema")
                        .HasColumnType("bit")
                        .HasColumnName("IndAcessoSistema");

                    b.Property<bool>("IndAnalista")
                        .HasColumnType("bit")
                        .HasColumnName("IndAnalista");

                    b.Property<bool>("IndAssessor")
                        .HasColumnType("bit")
                        .HasColumnName("IndAssessor");

                    b.Property<bool>("IndAtivo")
                        .HasColumnType("bit")
                        .HasColumnName("IndAtivo");

                    b.Property<bool>("IndFinanceiro")
                        .HasColumnType("bit")
                        .HasColumnName("IndFinanceiro");

                    b.Property<bool>("IndGerente")
                        .HasColumnType("bit")
                        .HasColumnName("IndGerente");

                    b.Property<bool>("IndPrimeiroAcesso")
                        .HasColumnType("bit")
                        .HasColumnName("IndPrimeiroAcesso");

                    b.Property<bool>("IndSolicitante")
                        .HasColumnType("bit")
                        .HasColumnName("IndSolicitante");

                    b.Property<bool>("IndUsuarioSistema")
                        .HasColumnType("bit")
                        .HasColumnName("IndUsuarioSistema");

                    b.Property<bool>("IndVistoriador")
                        .HasColumnType("bit")
                        .HasColumnName("IndVistoriador");

                    b.Property<string>("NomeOperador")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NomeOperador");

                    b.Property<string>("Rg")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Rg");

                    b.Property<string>("Senha")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Senha");

                    b.Property<string>("Telefone")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("Telefone");

                    b.Property<string>("UrlFoto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UrlFoto");

                    b.HasKey("Id");

                    b.HasIndex("IdEndereco");

                    b.ToTable("Operador");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodProdutoSeguradora")
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("CodProdutoSeguradora");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<int>("IdSeguradora")
                        .HasColumnType("int")
                        .HasColumnName("IdSeguradora");

                    b.Property<int>("IdTipoInspecao")
                        .HasColumnType("int")
                        .HasColumnName("IdTipoInspecao");

                    b.Property<bool>("IndAtivo")
                        .HasColumnType("bit")
                        .HasColumnName("IndAtivo");

                    b.Property<bool>("IndBlocoExtra")
                        .HasColumnType("bit")
                        .HasColumnName("IndBlocoExtra");

                    b.Property<bool>("IndFranquiaQuilometragem")
                        .HasColumnType("bit")
                        .HasColumnName("IndFranquiaQuilometragem");

                    b.Property<bool>("IndMetragemVariavel")
                        .HasColumnType("bit")
                        .HasColumnName("IndMetragemVariavel");

                    b.Property<bool>("IndQuilometragemVariavel")
                        .HasColumnType("bit")
                        .HasColumnName("IndQuilometragemVariavel");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NomeProduto");

                    b.Property<string>("NomeProdutoSeguradora")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NomeProdutoSeguradora");

                    b.Property<int?>("QtdFranquiaQuilometragem")
                        .HasColumnType("int")
                        .HasColumnName("QtdFranquiaQuilometragem");

                    b.Property<decimal?>("QtdMetragemM2Final")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("QtdMetragemM2Final");

                    b.Property<decimal?>("QtdMetragemM2Inicial")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("QtdMetragemM2Inicial");

                    b.Property<int?>("QtdQuilometragemFinal")
                        .HasColumnType("int")
                        .HasColumnName("QtdQuilometragemFinal");

                    b.Property<int?>("QtdQuilometragemInicial")
                        .HasColumnType("int")
                        .HasColumnName("QtdQuilometragemInicial");

                    b.Property<decimal?>("VlrBlocoExtr")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VlrBlocoExtr");

                    b.Property<decimal?>("VlrDespesa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VlrDespesa");

                    b.Property<decimal?>("VlrMetragemReceber")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VlrMetragemReceber");

                    b.Property<decimal?>("VlrQuilometragem")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VlrQuilometragem");

                    b.Property<decimal?>("VlrQuilometragemReceber")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VlrQuilometragemReceber");

                    b.Property<decimal?>("VlrReceber")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VlrReceber");

                    b.HasKey("Id");

                    b.HasIndex("IdSeguradora");

                    b.HasIndex("IdTipoInspecao");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Seguradora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnpj")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("Cnpj");

                    b.Property<int>("ContabilEmpresaDia")
                        .HasColumnType("int")
                        .HasColumnName("ContabilEmpresaDia");

                    b.Property<int>("ContabilInspecoesDiaFim")
                        .HasColumnType("int")
                        .HasColumnName("ContabilInspecoesDiaFim");

                    b.Property<int>("ContabilInspecoesDiaInicio")
                        .HasColumnType("int")
                        .HasColumnName("ContabilInspecoesDiaInicio");

                    b.Property<int>("ContabilInspetorDia")
                        .HasColumnType("int")
                        .HasColumnName("ContabilInspetorDia");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<string>("EmailRemetenteSolicitacao")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("EmailRemetenteSolicitacao");

                    b.Property<int?>("IdEndereco")
                        .HasColumnType("int")
                        .HasColumnName("IdEndereco");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<bool>("IndAgendaRepostaPorEmail")
                        .HasColumnType("bit")
                        .HasColumnName("IndAgendaRepostaPorEmail");

                    b.Property<bool>("IndAtivo")
                        .HasColumnType("bit")
                        .HasColumnName("IndAtivo");

                    b.Property<bool>("IndIntegracaoSolicitacaoPorEmail")
                        .HasColumnType("bit")
                        .HasColumnName("IndIntegracaoSolicitacaoPorEmail");

                    b.Property<bool>("IndLaudoRepostaPorEmail")
                        .HasColumnType("bit")
                        .HasColumnName("IndLaudoRepostaPorEmail");

                    b.Property<string>("Inscricao")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Inscricao");

                    b.Property<string>("NomeSeguradora")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NomeSeguradora");

                    b.Property<int>("QtdQuilometroFranquia")
                        .HasColumnType("int")
                        .HasColumnName("QtdQuilometroFranquia");

                    b.Property<string>("RazaoSocial")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("RazaoSocial");

                    b.Property<decimal?>("VlrQuilometroExcedente")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VlrQuilometroExcedente");

                    b.HasKey("Id");

                    b.HasIndex("IdEndereco");

                    b.ToTable("Seguradora");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Solicitacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AreaConstruida")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("AreaContruida");

                    b.Property<int?>("BlocoConstruido")
                        .HasColumnType("int")
                        .HasColumnName("BlocoContruido");

                    b.Property<int?>("CasaConstruida")
                        .HasColumnType("int")
                        .HasColumnName("CasaConstruida");

                    b.Property<string>("CodSeguradora")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CodSeguradora");

                    b.Property<int>("CodSistemaLegado")
                        .HasColumnType("int")
                        .HasColumnName("CodSistemaLegado");

                    b.Property<DateTime?>("ControleDthEmailCobrancaVistoria")
                        .HasColumnType("datetime2")
                        .HasColumnName("ControleDthEmailCobrancaVistoria");

                    b.Property<string>("CorretorNome")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("CorretorNome");

                    b.Property<string>("CorretorTelefone")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("CorretorTelefone");

                    b.Property<decimal?>("CustoDeslocamentoAcordado")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CustoDeslocamentoAcordado");

                    b.Property<decimal?>("CustoDeslocamentoPrevisto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CustoDeslocamentoPrevisto");

                    b.Property<decimal?>("CustoDeslocamentoRealizado")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CustoDeslocamentoRealizado");

                    b.Property<decimal?>("CustoTotalAcordado")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CustoTotalAcordado");

                    b.Property<decimal?>("CustoTotalPrevisto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CustoTotalPrevisto");

                    b.Property<decimal?>("CustoTotalRealizado")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CustoTotalRealizado");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<decimal?>("DeslocamentoPrevisto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DeslocamentoPrevisto");

                    b.Property<decimal?>("DeslocamentoRealizado")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DeslocamentoRealizado");

                    b.Property<DateTime?>("DthRelacionamentoAgendaInformada")
                        .HasColumnType("datetime2")
                        .HasColumnName("DthRelacionamentoAgendaInformada");

                    b.Property<DateTime?>("DthVistoriaRealizada")
                        .HasColumnType("datetime2")
                        .HasColumnName("DthVistoriaRealizada");

                    b.Property<int?>("IdAnalista")
                        .HasColumnType("int")
                        .HasColumnName("IdAnalista");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("IdCliente");

                    b.Property<int?>("IdContratoLancamentoValor")
                        .HasColumnType("int")
                        .HasColumnName("IdContratoLancamentoValor");

                    b.Property<int>("IdEnderecoCliente")
                        .HasColumnType("int")
                        .HasColumnName("IdEnderecoCliente");

                    b.Property<int?>("IdFilial")
                        .HasColumnType("int")
                        .HasColumnName("IdFilial");

                    b.Property<int?>("IdOperadorApropriado")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorApropriado");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int")
                        .HasColumnName("IdProduto");

                    b.Property<int>("IdSeguradora")
                        .HasColumnType("int")
                        .HasColumnName("IdSeguradora");

                    b.Property<int?>("IdSolicitacaoOrigemReinspecao")
                        .HasColumnType("int")
                        .HasColumnName("IdSolicitacaoOrigemReinspecao");

                    b.Property<int?>("IdSolicitante")
                        .HasColumnType("int")
                        .HasColumnName("IdSolicitante");

                    b.Property<int?>("IdVistoriador")
                        .HasColumnType("int")
                        .HasColumnName("IdVistoriador");

                    b.Property<bool>("IndCustoVistoriaAcordado")
                        .HasColumnType("bit")
                        .HasColumnName("IndCustoVistoriaAcordado");

                    b.Property<bool>("IndRelacionamentoAgendaInformada")
                        .HasColumnType("bit")
                        .HasColumnName("IndRelacionamentoAgendaInformada");

                    b.Property<bool>("IndRelatorioExigenciaMelhoria")
                        .HasColumnType("bit")
                        .HasColumnName("IndRelatorioExigenciaMelhoria");

                    b.Property<bool>("IndRotaDeVolta")
                        .HasColumnType("bit")
                        .HasColumnName("IndRotaDeVolta");

                    b.Property<bool>("IndUrgente")
                        .HasColumnType("bit")
                        .HasColumnName("IndUrgente");

                    b.Property<string>("NomeOperadorAgendaInformada")
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("NomeOperadorAgendaInformada");

                    b.Property<int?>("QtdEquipamento")
                        .HasColumnType("int")
                        .HasColumnName("QtdEquipamento");

                    b.Property<string>("SolicitanteEmail")
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("SolicitanteEmail");

                    b.Property<string>("SolicitanteNome")
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("SolicitanteNome");

                    b.Property<string>("SolicitanteTelefone")
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("SolicitanteTelefone");

                    b.Property<int?>("TipoNotificacaoAgendaInformada")
                        .HasColumnType("int")
                        .HasColumnName("TipoNotificacaoAgendaInformada");

                    b.Property<int?>("TipoRotaVistoriaPrevista")
                        .HasColumnType("int")
                        .HasColumnName("TipoRotaVistoriaPrevista");

                    b.Property<int?>("TipoRotaVistoriaRealizada")
                        .HasColumnType("int")
                        .HasColumnName("TipoRotaVistoriaRealizada");

                    b.Property<int?>("TpSituacao")
                        .HasColumnType("int")
                        .HasColumnName("TpSituacao");

                    b.Property<string>("TxtInformacoesAdicionais")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("TxtInformacoesAdicionais");

                    b.Property<string>("TxtJustificativaAnalistaDefinido")
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("TxtJustificativaAnalistaDefinido");

                    b.Property<string>("TxtJustificativaDeslocamentoRealizado")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("TxtJustificativaDeslocamentoRealizado");

                    b.Property<string>("TxtJustificativaVistoriadorDefinido")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("TxtJustificativaVistoriadorDefinido");

                    b.Property<string>("VistoriadorCidadeBase")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("VistoriadorCidadeBase");

                    b.Property<decimal?>("VlrHonorarioPreAcordo")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VlrHonorarioPreAcordo");

                    b.Property<decimal?>("VlrPagamentoVistoria")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VlrPagamentoVistoria");

                    b.Property<decimal?>("VlrPagamentoVistoriaAcordado")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VlrPagamentoVistoriaAcordado");

                    b.Property<decimal?>("VlrQuilometroRodado")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VlrQuilometroRodado");

                    b.Property<decimal?>("VlrRiscoSegurado")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VlrRiscoSegurado");

                    b.HasKey("Id");

                    b.HasIndex("IdAnalista");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEnderecoCliente");

                    b.HasIndex("IdFilial");

                    b.HasIndex("IdOperadorApropriado");

                    b.HasIndex("IdOperadorCadastro");

                    b.HasIndex("IdOperadorModificacao");

                    b.HasIndex("IdProduto");

                    b.HasIndex("IdSeguradora");

                    b.HasIndex("IdSolicitante");

                    b.HasIndex("IdVistoriador");

                    b.ToTable("Solicitacao");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Solicitante", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int>("IdOperador")
                        .HasColumnType("int")
                        .HasColumnName("IdOperador");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<int?>("IdSeguradora")
                        .HasColumnType("int")
                        .HasColumnName("IdSeguradora");

                    b.Property<bool>("IndAtivo")
                        .HasColumnType("bit")
                        .HasColumnName("IndAtivo");

                    b.Property<int>("TipoSolicitante")
                        .HasColumnType("int")
                        .HasColumnName("TipoSolicitante");

                    b.HasKey("Id");

                    b.HasIndex("IdSeguradora");

                    b.ToTable("Solicitante");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.TipoAssunto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<string>("NomeAssunto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NomeAssunto");

                    b.Property<string>("TextoPadrao")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("TextoPadrao");

                    b.HasKey("Id");

                    b.ToTable("TipoAssunto");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.TipoInspecao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdTipoInspecao")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<string>("DescricaoTipoInspecao")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("DescricaoTipoInspecao");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<bool>("IndAtivo")
                        .HasColumnType("bit")
                        .HasColumnName("IndAtivo");

                    b.Property<string>("NomeTipoInspecao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NomeTipoInspecao");

                    b.HasKey("Id");

                    b.ToTable("TipoInspecao");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Vistoriador", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int>("IdEnderecoBase")
                        .HasColumnType("int")
                        .HasColumnName("IdEnderecoBase");

                    b.Property<int>("IdOperador")
                        .HasColumnType("int")
                        .HasColumnName("IdOperador");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<bool>("IndAtivo")
                        .HasColumnType("bit")
                        .HasColumnName("IndAtivo");

                    b.Property<bool>("IndEnderecoBaseIgual")
                        .HasColumnType("bit")
                        .HasColumnName("IndEnderecoBaseIgual");

                    b.HasKey("Id");

                    b.HasIndex("IdEnderecoBase");

                    b.ToTable("Vistoriador");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.VistoriadorProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtModificacao");

                    b.Property<int>("IdContratoLancamento")
                        .HasColumnType("int")
                        .HasColumnName("IdContratoLancamento");

                    b.Property<int>("IdContratoLancamentoValor")
                        .HasColumnType("int")
                        .HasColumnName("IdContratoLancamentoValor");

                    b.Property<int>("IdOperadorCadastro")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorCadastro");

                    b.Property<int>("IdOperadorModificacao")
                        .HasColumnType("int")
                        .HasColumnName("IdOperadorModificacao");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int")
                        .HasColumnName("IdProduto");

                    b.Property<int>("IdVistoriador")
                        .HasColumnType("int")
                        .HasColumnName("IdVistoriador");

                    b.Property<bool>("IndAtivo")
                        .HasColumnType("bit")
                        .HasColumnName("IndAtivo");

                    b.Property<decimal?>("VlrPagamentoVistoria")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VlrPagamentoVistoria");

                    b.Property<decimal?>("VlrQuilometroRodado")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VlrQuilometroRodado");

                    b.HasKey("Id");

                    b.HasIndex("IdProduto");

                    b.HasIndex("IdVistoriador", "IdProduto", "IdContratoLancamento", "IdContratoLancamentoValor")
                        .IsUnique()
                        .HasDatabaseName("UK_VistoriadorProduto");

                    b.ToTable("VistoriadorProduto");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Agendamento", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Solicitacao", "Solicitacao")
                        .WithMany("Agendamento")
                        .HasForeignKey("IdSolicitacao")
                        .IsRequired();

                    b.HasOne("Differencial.Domain.Entities.Vistoriador", "Vistoriador")
                        .WithMany()
                        .HasForeignKey("IdVistoriador")
                        .IsRequired();

                    b.Navigation("Solicitacao");

                    b.Navigation("Vistoriador");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Analista", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Operador", "Operador")
                        .WithOne("Analista")
                        .HasForeignKey("Differencial.Domain.Entities.Analista", "Id")
                        .IsRequired();

                    b.Navigation("Operador");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.ArquivoAnexo", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Solicitacao", "Solicitacao")
                        .WithMany("Foto")
                        .HasForeignKey("IdSolicitacao")
                        .IsRequired();

                    b.Navigation("Solicitacao");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.AtividadeProcesso", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Operador", "OperadorConcluida")
                        .WithMany()
                        .HasForeignKey("IdOperadorConcluida");

                    b.HasOne("Differencial.Domain.Entities.Solicitacao", "Solicitacao")
                        .WithMany("AtividadeProcesso")
                        .HasForeignKey("IdSolicitacao")
                        .IsRequired();

                    b.Navigation("OperadorConcluida");

                    b.Navigation("Solicitacao");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.ClienteEndereco", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Cliente", "Cliente")
                        .WithMany("ClienteEndereco")
                        .HasForeignKey("IdCliente")
                        .IsRequired();

                    b.HasOne("Differencial.Domain.Entities.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("IdEndereco")
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Cobertura", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Solicitacao", "Solicitacao")
                        .WithMany("Cobertura")
                        .HasForeignKey("IdSolicitacao");

                    b.Navigation("Solicitacao");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Comunicacao", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Operador", "Operador")
                        .WithMany()
                        .HasForeignKey("IdOperadorCadastro")
                        .IsRequired();

                    b.HasOne("Differencial.Domain.Entities.Solicitacao", "Solicitacao")
                        .WithMany("Comunicacao")
                        .HasForeignKey("IdSolicitacao")
                        .IsRequired();

                    b.Navigation("Operador");

                    b.Navigation("Solicitacao");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Contrato", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Produto", "Produto")
                        .WithOne("Contrato")
                        .HasForeignKey("Differencial.Domain.Entities.Contrato", "Id")
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.ContratoLancamento", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Contrato", "Contrato")
                        .WithMany("ContratoLancamento")
                        .HasForeignKey("IdContrato")
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.ContratoLancamentoValor", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.ContratoLancamento", "ContratoLancamento")
                        .WithMany("ContratoLancamentoValor")
                        .HasForeignKey("IdContratoLancamento")
                        .IsRequired();

                    b.Navigation("ContratoLancamento");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Filial", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Seguradora", "Seguradora")
                        .WithMany("Filial")
                        .HasForeignKey("IdSeguradora")
                        .IsRequired();

                    b.Navigation("Seguradora");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.LancamentoFinanceiro", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.LancamentoFinanceiroTotal", "LancamentoFinanceiroTotal")
                        .WithMany("LancamentoFinanceiro")
                        .HasForeignKey("IdLancamentoFinanceiroTotal")
                        .IsRequired();

                    b.HasOne("Differencial.Domain.Entities.Operador", "OperadorCadastro")
                        .WithMany()
                        .HasForeignKey("IdOperadorCadastro")
                        .IsRequired();

                    b.HasOne("Differencial.Domain.Entities.Solicitacao", "Solicitacao")
                        .WithMany("LancamentoFinanceiro")
                        .HasForeignKey("IdSolicitacao")
                        .IsRequired();

                    b.Navigation("LancamentoFinanceiroTotal");

                    b.Navigation("OperadorCadastro");

                    b.Navigation("Solicitacao");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.LancamentoFinanceiroTotal", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Solicitacao", "Solicitacao")
                        .WithMany()
                        .HasForeignKey("IdSolicitacao")
                        .IsRequired();

                    b.Navigation("Solicitacao");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.LaudoFoto", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.ArquivoAnexo", "ArquivoAnexo")
                        .WithOne("LaudoFoto")
                        .HasForeignKey("Differencial.Domain.Entities.LaudoFoto", "Id")
                        .IsRequired();

                    b.HasOne("Differencial.Domain.Entities.Laudo", "Laudo")
                        .WithMany("LaudoFoto")
                        .HasForeignKey("IdLaudo");

                    b.Navigation("ArquivoAnexo");

                    b.Navigation("Laudo");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.LogAuditoria", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Operador", "Operador")
                        .WithMany()
                        .HasForeignKey("UsuarioAplicacao")
                        .IsRequired();

                    b.Navigation("Operador");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.MovimentacaoProcesso", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Operador", "OperadorDestino")
                        .WithMany()
                        .HasForeignKey("IdOperadorDestino");

                    b.HasOne("Differencial.Domain.Entities.Operador", "OperadorOrigem")
                        .WithMany()
                        .HasForeignKey("IdOperadorOrigem")
                        .IsRequired();

                    b.HasOne("Differencial.Domain.Entities.Solicitacao", "Solicitacao")
                        .WithMany("MovimentacaoProcesso")
                        .HasForeignKey("IdSolicitacao")
                        .IsRequired();

                    b.Navigation("OperadorDestino");

                    b.Navigation("OperadorOrigem");

                    b.Navigation("Solicitacao");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.NotificacaoOperador", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Notificacao", "Notificacao")
                        .WithMany("NotificacaoOperador")
                        .HasForeignKey("IdNotificacao")
                        .IsRequired();

                    b.Navigation("Notificacao");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Operador", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("IdEndereco");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Produto", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Seguradora", "Seguradora")
                        .WithMany("Produto")
                        .HasForeignKey("IdSeguradora")
                        .IsRequired();

                    b.HasOne("Differencial.Domain.Entities.TipoInspecao", "TipoInspecao")
                        .WithMany("Produto")
                        .HasForeignKey("IdTipoInspecao")
                        .IsRequired();

                    b.Navigation("Seguradora");

                    b.Navigation("TipoInspecao");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Seguradora", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("IdEndereco");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Solicitacao", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Analista", "Analista")
                        .WithMany("Solicitacao")
                        .HasForeignKey("IdAnalista");

                    b.HasOne("Differencial.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Solicitacao")
                        .HasForeignKey("IdCliente");

                    b.HasOne("Differencial.Domain.Entities.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("IdEnderecoCliente")
                        .IsRequired();

                    b.HasOne("Differencial.Domain.Entities.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("IdFilial");

                    b.HasOne("Differencial.Domain.Entities.Operador", "OperadorApropriado")
                        .WithMany()
                        .HasForeignKey("IdOperadorApropriado");

                    b.HasOne("Differencial.Domain.Entities.Operador", "OperadorCadastro")
                        .WithMany()
                        .HasForeignKey("IdOperadorCadastro")
                        .IsRequired();

                    b.HasOne("Differencial.Domain.Entities.Operador", "OperadorModificacao")
                        .WithMany()
                        .HasForeignKey("IdOperadorModificacao")
                        .IsRequired();

                    b.HasOne("Differencial.Domain.Entities.Produto", "Produto")
                        .WithMany("Solicitacao")
                        .HasForeignKey("IdProduto")
                        .IsRequired();

                    b.HasOne("Differencial.Domain.Entities.Seguradora", "Seguradora")
                        .WithMany()
                        .HasForeignKey("IdSeguradora")
                        .IsRequired();

                    b.HasOne("Differencial.Domain.Entities.Solicitante", "Solicitante")
                        .WithMany("Solicitacao")
                        .HasForeignKey("IdSolicitante");

                    b.HasOne("Differencial.Domain.Entities.Vistoriador", "Vistoriador")
                        .WithMany("Solicitacao")
                        .HasForeignKey("IdVistoriador");

                    b.Navigation("Analista");

                    b.Navigation("Cliente");

                    b.Navigation("Endereco");

                    b.Navigation("Filial");

                    b.Navigation("OperadorApropriado");

                    b.Navigation("OperadorCadastro");

                    b.Navigation("OperadorModificacao");

                    b.Navigation("Produto");

                    b.Navigation("Seguradora");

                    b.Navigation("Solicitante");

                    b.Navigation("Vistoriador");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Solicitante", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Operador", "Operador")
                        .WithOne("Solicitante")
                        .HasForeignKey("Differencial.Domain.Entities.Solicitante", "Id")
                        .IsRequired();

                    b.HasOne("Differencial.Domain.Entities.Seguradora", "Seguradora")
                        .WithMany("Solicitante")
                        .HasForeignKey("IdSeguradora");

                    b.Navigation("Operador");

                    b.Navigation("Seguradora");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Vistoriador", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Operador", "Operador")
                        .WithOne("Vistoriador")
                        .HasForeignKey("Differencial.Domain.Entities.Vistoriador", "Id")
                        .IsRequired();

                    b.HasOne("Differencial.Domain.Entities.Endereco", "EnderecoBase")
                        .WithMany()
                        .HasForeignKey("IdEnderecoBase")
                        .IsRequired();

                    b.Navigation("EnderecoBase");

                    b.Navigation("Operador");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.VistoriadorProduto", b =>
                {
                    b.HasOne("Differencial.Domain.Entities.Produto", "Produto")
                        .WithMany("VistoriadorProduto")
                        .HasForeignKey("IdProduto")
                        .IsRequired();

                    b.HasOne("Differencial.Domain.Entities.Vistoriador", "Vistoriador")
                        .WithMany("VistoriadorProduto")
                        .HasForeignKey("IdVistoriador")
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Vistoriador");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Analista", b =>
                {
                    b.Navigation("Solicitacao");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.ArquivoAnexo", b =>
                {
                    b.Navigation("LaudoFoto");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("ClienteEndereco");

                    b.Navigation("Solicitacao");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Contrato", b =>
                {
                    b.Navigation("ContratoLancamento");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.ContratoLancamento", b =>
                {
                    b.Navigation("ContratoLancamentoValor");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.LancamentoFinanceiroTotal", b =>
                {
                    b.Navigation("LancamentoFinanceiro");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Laudo", b =>
                {
                    b.Navigation("LaudoFoto");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Notificacao", b =>
                {
                    b.Navigation("NotificacaoOperador");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Operador", b =>
                {
                    b.Navigation("Analista");

                    b.Navigation("Solicitante");

                    b.Navigation("Vistoriador");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Produto", b =>
                {
                    b.Navigation("Contrato");

                    b.Navigation("Solicitacao");

                    b.Navigation("VistoriadorProduto");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Seguradora", b =>
                {
                    b.Navigation("Filial");

                    b.Navigation("Produto");

                    b.Navigation("Solicitante");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Solicitacao", b =>
                {
                    b.Navigation("Agendamento");

                    b.Navigation("AtividadeProcesso");

                    b.Navigation("Cobertura");

                    b.Navigation("Comunicacao");

                    b.Navigation("Foto");

                    b.Navigation("LancamentoFinanceiro");

                    b.Navigation("MovimentacaoProcesso");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Solicitante", b =>
                {
                    b.Navigation("Solicitacao");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.TipoInspecao", b =>
                {
                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Differencial.Domain.Entities.Vistoriador", b =>
                {
                    b.Navigation("Solicitacao");

                    b.Navigation("VistoriadorProduto");
                });
#pragma warning restore 612, 618
        }
    }
}
